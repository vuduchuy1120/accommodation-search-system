@using ASSystem.Dtos.Admin
@model List<UserProfileDto>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Bootstrap User Management Data Table</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto|Varela+Round">
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <style>
        body {
            color: #566787;
            background: #f5f5f5;
            font-family: 'Varela Round', sans-serif;
            font-size: 13px;
        }

        .table-responsive {
            margin: 30px 0;
        }

        .table-wrapper {
            min-width: 1000px;
            background: #fff;
            padding: 20px 25px;
            border-radius: 3px;
            box-shadow: 0 1px 1px rgba(0,0,0,.05);
        }

        .table-title {
            padding-bottom: 15px;
            background: #299be4;
            color: #fff;
            padding: 16px 30px;
            margin: -20px -25px 10px;
            border-radius: 3px 3px 0 0;
        }

            .table-title h2 {
                margin: 5px 0 0;
                font-size: 24px;
            }

            .table-title .btn {
                color: #566787;
                float: right;
                font-size: 13px;
                background: #fff;
                border: none;
                min-width: 50px;
                border-radius: 2px;
                border: none;
                outline: none !important;
                margin-left: 10px;
            }

                .table-title .btn:hover, .table-title .btn:focus {
                    color: #566787;
                    background: #f2f2f2;
                }

                .table-title .btn i {
                    float: left;
                    font-size: 21px;
                    margin-right: 5px;
                }

                .table-title .btn span {
                    float: left;
                    margin-top: 2px;
                }

        table.table tr th, table.table tr td {
            border-color: #e9e9e9;
            padding: 12px 15px;
            vertical-align: middle;
        }

            table.table tr th:first-child {
                width: 60px;
            }

            table.table tr th:last-child {
                width: 100px;
            }

        table.table-striped tbody tr:nth-of-type(odd) {
            background-color: #fcfcfc;
        }

        table.table-striped.table-hover tbody tr:hover {
            background: #f5f5f5;
        }

        table.table th i {
            font-size: 13px;
            margin: 0 5px;
            cursor: pointer;
        }

        table.table td:last-child i {
            opacity: 0.9;
            font-size: 22px;
            margin: 0 2px;
        }

        table.table td a {
            font-weight: bold;
            color: #566787;
            display: inline-block;
            text-decoration: none;
        }

            table.table td a:hover {
                color: #2196F3;
            }

            table.table td a.settings {
                color: #2196F3;
            }

            table.table td a.delete {
                color: #F44336;
            }

        table.table td i {
            font-size: 19px;
        }


        .status {
            font-size: 30px;
            margin: 2px 2px 0 0;
            display: inline-block;
            vertical-align: middle;
            line-height: 10px;
        }

        .text-success {
            color: #10c469;
        }

        .text-info {
            color: #62c9e8;
        }

        .text-warning {
            color: #FFC107;
        }

        .text-danger {
            color: #ff5b5b;
        }

        .hint-text {
            float: left;
            margin-top: 10px;
            font-size: 13px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="table-responsive">
            <div class="table-wrapper">
                <div class="table-title">
                    <div class="row">
                        <div class="col-xs-5">
                            <h2>User <b>Management</b></h2>
                        </div>
                        <div class="col-xs-7">
                            <form method="post" action="Search">
                                <input type="text" name="search" placeholder="Search..." style="width:550px; height:35px; color:black" />
                                <button class="btn btn-primary search-btn" type="submit" ><i class="material-icons">&#xE8B6;</i> </button>
                            </form>
                        </div>
                    </div>
                </div>
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Role</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.AccountId</td>
                                <td>@item.Email</td>
                                <td>
                                    <select class="role-select" data-account-id="@item.RoleId" id="role-@item.AccountId">
                                    </select>
                                </td>
                                <td>
                                    @if (item.IsActive == true)
                                    {
                                        <span class="status text-success">&bull;</span>
                                        <span>Active</span>

                                    }
                                    else
                                    {
                                        <span class="status text-danger">&bull;</span>
                                        <span>Blocked</span>
                                    }
                                </td>

                                <td>
                                    <a href="/User/Update?id=@item.AccountId" class="settings" title="Settings" data-toggle="tooltip"><i class="material-icons">&#xE8B8;</i></a>

                                    <a class="delete" title="Delete" data-toggle="tooltip"><i class="material-icons">&#xE5C9;</i></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
    <script>
        fetch('https://localhost:7280/api/Admin/GetAllRole')
            .then(response => {
                return response.json();
            })
            .then(data => {
                console.log(data);
                let selects = document.getElementsByClassName('role-select');

                Array.from(selects).forEach(select => {
                    data.data.forEach(role => {
                        let option = document.createElement('option');
                        option.value = role.roleId;
                        option.text = role.description;
                        select.appendChild(option);
                        if (select.getAttribute('data-account-id') == role.roleId)
                            option.setAttribute('selected', 'selected')
                    });

                    select.onchange = function () {
                        let selectedRoleId = this.value;
                        let confirmation = confirm("Xác nhận thay đổi vai trò?");

                        var accountId = this.id.split('-')[1];
                        if (confirmation) {

                            fetch('https://localhost:7280/api/Admin/UpdateUserRole/' + accountId,
                                {
                                    method: 'PUT',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({ roleId: selectedRoleId })
                                })
                                .then(response => {
                                    return response.json();
                                })
                                .then(data => {
                                    console.log(data);
                                });

                        } else {
                            // Không làm gì cả nếu người dùng hủy bỏ
                            location.reload();
                        }
                    };
                });
            });

        let deleteLinks = document.getElementsByClassName('delete');

        Array.from(deleteLinks).forEach(link => {
            let accountId = link.parentElement.parentElement.querySelector('td:first-child').textContent.trim();
            link.setAttribute('data-account-id', accountId);

            link.onclick = function () {
                let accountId = this.getAttribute('data-account-id');
                console.log(accountId);

                let confirmation = confirm("Bạn có chắc chắn muốn xoá không? Hành động này không thể khôi phục hãy suy nghĩ kỹ!");

                if (confirmation) {
                    fetch('https://localhost:7280/api/Admin/DeleteUser/' + accountId,
                        {
                            method: 'PUT'
                        })
                        .then(response => {
                            return response.json();
                        })
                        .then(data => {
                            console.log(data);
                            if (data.success) {
                                location.reload();
                            }
                        });

                } else {
                    // Không làm gì cả nếu người dùng hủy bỏ
                }
            };
        });
    </script>
</body>
</html>

